#!/usr/bin/env bash

#
# Originally made by Mystara, Helped by claudeAI with the more advanced stuff
#

# --- Information Gathering ----
get_host(){
  if command -v hostnamectl >/dev/null; then
    hn=$(hostnamectl --pretty 2>/dev/null)
    [ -z "$hn" ] && hn=$(hostnamectl --static 2>/dev/null)
  fi
  [ -z "${hn:-}" ] && hn=$(hostname --fqdn 2>/dev/null || true)
  [ -z "$hn" ] && hn=$(cat /etc/hostname 2>/dev/null || true)
  [ -z "$hn" ] && hn=$(uname -n)
  printf "%s" "$hn"
}
HOSTNAME=$(get_host)
DISTRO=$( ( . /etc/os-release 2>/dev/null; echo "${NAME:-Linux}${VERSION_ID:+ $VERSION_ID}" ) )
KERNEL="$(uname -r) ($(uname -m))"
UPTIME=$(uptime -p 2>/dev/null | sed 's/^up //')
[ -z "$UPTIME" ] && { up=$(( $(cut -d. -f1 /proc/uptime 2>/dev/null) )); printf -v UPTIME "%dd %dh %dm" $((up/86400)) $((up%86400/3600)) $((up%3600/60)); }
if command -v pacman >/dev/null; then
  PKGS=$(pacman -Qq 2>/dev/null | wc -l)
elif command -v dpkg >/dev/null; then
  PKGS=$(dpkg -l 2>/dev/null | awk '/^ii/ {c++} END{print c+0}')
else
  PKGS="?"
fi
MEMORY=$(awk '/MemTotal:/{t=$2}/MemAvailable:/{a=$2} END{u=(t-a)/1048576; tt=t/1048576; printf "%.1fG | %.1fG",u,tt}' /proc/meminfo)
CPU=$(awk -F: '/model name/{gsub(/^ +/,"",$2);print $2;exit}' /proc/cpuinfo)
SPOTIFY=$($HOME/scripts/song-info.sh)
used_total(){ df -hP "$1" 2>/dev/null | awk 'NR==2{print $3 "/" $2}'; }
declare -a NAME_LIST LABEL_LIST MP_LIST
while read -r name label mps fstype type; do
  [ "$type" != "part" ] && continue
  [ -z "$mps" ] && continue
  mp="${mps%% *}"
  [[ "$mp" == /boot* ]] && continue
  [[ "$mp" == /run/user/*/doc* ]] && continue
  NAME_LIST+=("$name")
  LABEL_LIST+=("$label")
  MP_LIST+=("$mp")
done < <(lsblk -e7 -nr -o NAME,LABEL,MOUNTPOINTS,FSTYPE,TYPE)
declare -a ORDERED_IDX
for i in "${!MP_LIST[@]}"; do [[ "${MP_LIST[$i]}" == "/" ]] && ORDERED_IDX+=("$i"); done
for i in "${!MP_LIST[@]}"; do [[ "${MP_LIST[$i]}" == "/home" ]] && ORDERED_IDX+=("$i"); done
for i in "${!MP_LIST[@]}"; do
  mp="${MP_LIST[$i]}"
  [[ "$mp" == "/" || "$mp" == "/home" ]] && continue
  ORDERED_IDX+=("$i")
done
max_label=0
for i in "${ORDERED_IDX[@]}"; do
  lbl="${LABEL_LIST[$i]}"
  [ -z "$lbl" ] && lbl="${NAME_LIST[$i]}"
  lbl=$(printf "%b" "$lbl")
  ((${#lbl} > max_label)) && max_label=${#lbl}
done
((max_label+=2))

if [ -f ~/.cache/wal/colors.sh ]; then
  . ~/.cache/wal/colors.sh
  hex2rgb() {
    hex=${1#\#}
    printf "%d;%d;%d" 0x${hex:0:2} 0x${hex:2:2} 0x${hex:4:2}
  }
  C1=$(hex2rgb "$color1")
  C2=$(hex2rgb "$color2")
  C3=$(hex2rgb "$color3")
  C4=$(hex2rgb "$color4")
  C5=$(hex2rgb "$color5")
  C6=$(hex2rgb "$color6")
  C7=$(hex2rgb "$color7")
else
  C1="200;0;255"
  C2="100;200;255"
  C3="0;100;200"
  C4="255;200;0"
  C5="255;100;0"
  C6="255;0;100"
  C7="200;200;200"
fi

ESC=$'\033'
C0="${ESC}[0m"
CL="${ESC}[38;2;${C1}m"
CV="${ESC}[38;2;${C2}m"
CD="${ESC}[38;2;${C3}m"
C_4="${ESC}[38;2;${C4}m"
C_5="${ESC}[38;2;${C5}m"
C_6="${ESC}[38;2;${C6}m"
C_7="${ESC}[38;2;${C7}m"

# --- Output ----
print_info(){ printf " %-9s %s\n" "$1" "$2"; }
print_drive(){ printf "   %s %s\n" "$1" "$2"; }

print_info "${CL}User:${C0}"     "${CV}Melissa@$HOSTNAME${C0}"
print_info "${CL}Distro:${C0}"   "${CV}$DISTRO${C0}"
print_info "${CL}Kernel:${C0}"   "${CV}$KERNEL${C0}"
print_info "${CL}Uptime:${C0}"   "${CV}$UPTIME${C0}"
print_info "${CL}Packages:${C0}" "${CV}$PKGS${C0}"
print_info "${CL}Memory:${C0}"   "${CV}$MEMORY${C0}"
print_info "${CL}CPU:${C0}"      "${CV}$CPU${C0}"
print_info "${CL}Spotify:${C0}"  "${CV}$SPOTIFY${C0}"
printf " ${CL}Drives:${C0}\n"
for i in "${ORDERED_IDX[@]}"; do
  lbl="${LABEL_LIST[$i]}"; [ -z "$lbl" ] && lbl="${NAME_LIST[$i]}"
  lbl=$(printf "%b" "$lbl")
  mp="${MP_LIST[$i]}"
  ut=$(used_total "$mp")
  print_drive "${CL}•${C0}" "$(printf "${CV}%-${max_label}s %-14s${C0} ${CD}%s${C0}" "$lbl" "$mp" "$ut")"
done
printf "\n  ${CL}● ${CV}● ${CD}● ${C_4}● ${C_5}● ${C_6}● ${C_7}●${C0}\n"
echo ""
