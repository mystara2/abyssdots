#!/usr/bin/env bash
CONFIG_FILE="$HOME/main_configuration.yml"
[ -L "$CONFIG_FILE" ] && CONFIG_FILE=$(readlink -f "$CONFIG_FILE")
[ ! -f "$CONFIG_FILE" ] && exit 1

FZF_OPTS="--height=40% --border=rounded --layout=reverse --ansi"

get_value() {
    yq e "$1" "$CONFIG_FILE" 2>/dev/null
}

navigate() {
    local current_path="$1"
    local prompt="$2"
    
    if [ -z "$current_path" ]; then
        # Top level
        mapfile -t items < <(get_value '.[] | to_entries | .[] | .key')
        choice=$(printf "%s\n" "${items[@]}" | fzf --prompt="Pick > " $FZF_OPTS)
        [ -z "$choice" ] && exit 0
        
        # Find array index containing this key
        for i in $(seq 0 100); do
            if get_value ".[$i] | has(\"$choice\")" | grep -q "true"; then
                navigate ".[$i][\"$choice\"]" "$choice"
                break
            fi
        done
    else
        # Check if it's a config (has 'name' field)
        if get_value "$current_path | has(\"name\")" | grep -q "true"; then
            conf=$(get_value "$current_path.conf")
            conf="${conf/#\~/$HOME}"
            [ -L "$conf" ] && conf=$(readlink -f "$conf")
            "${EDITOR:-nvim}" "$conf"
            exit 0
        fi
        
        # It's a group
        while true; do
            mapfile -t items < <(get_value "$current_path | .[] | to_entries | .[] | .key")
            [ ${#items[@]} -eq 0 ] && return
            
            choice=$(printf "%s\n" "${items[@]}" | fzf --prompt="$prompt > " $FZF_OPTS)
            [ -z "$choice" ] && return
            
            # Find which array index has this key
            for i in $(seq 0 100); do
                if get_value "$current_path | .[$i] | has(\"$choice\")" | grep -q "true"; then
                    navigate "$current_path[$i][\"$choice\"]" "$prompt > $choice"
                    break
                fi
            done
        done
    fi
}

navigate "" ""
